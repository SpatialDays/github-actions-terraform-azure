name: Terraform plan on pull request to dev

permissions:
  contents: read
  issues: write
  pull-requests: write
on:
  pull_request:
    branches:
      - dev
  
jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: TF_DEV_SECRETS
    env:
      TF_VAR_SUBSCRIPTION_ID: ${{ secrets.TF_VAR_SUBSCRIPTION_ID }}
      TF_VAR_CLIENT_ID: ${{ secrets.TF_VAR_CLIENT_ID }}
      TF_VAR_CLIENT_SECRET: ${{ secrets.TF_VAR_CLIENT_SECRET }}
      TF_VAR_TENANT_ID: ${{ secrets.TF_VAR_TENANT_ID }}
      TF_VAR_STATE_RESOURCE_GROUP_NAME: ${{ vars.TF_VAR_STATE_RESOURCE_GROUP_NAME }}
      TF_VAR_STATE_STORAGE_ACCOUNT_NAME: ${{ vars.TF_VAR_STATE_STORAGE_ACCOUNT_NAME }}
      TF_VAR_STATE_CONTAINER_NAME: ${{ vars.TF_VAR_STATE_CONTAINER_NAME }}
      TF_VAR_ENVIRONMENT: ${{ vars.TF_VAR_ENVIRONMENT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Perform envsubst on provider_secrets_template with environment variables
        run: envsubst < provider_secrets_template > provider_secrets
      - name: Setup Terraform Provider
        uses: hashicorp/setup-terraform@v2
      - name: Terraform init with backend config
        id: init
        run: terraform init -backend-config=provider_secrets
      - name: Terraform validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: true
      - name: Terraform plan
        if: steps.validate.outcome == 'success'
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - name: Output stdout into comment
        if: steps.validate.outcome == 'success' && steps.plan.outcome == 'success'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Results
            Terraform Initialization: ${{ steps.init.outcome }}
            Terraform Validation: ${{ steps.validate.outcome }}
            Terraform plan for this pull request:
            ```diff
            ${{ steps.plan.outputs.stdout }}
            ```
      - name: Output stderr into comment
        if: steps.validate.outcome == 'failure' || steps.plan.outcome == 'failure'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Results
            Terraform Initialization: ${{ steps.init.outcome }}
            Terraform Validation: ${{ steps.validate.outcome }}
            Terraform validation output for this pull request:
            ```
            ${{ steps.validate.outputs.stderr }}
            ```
      - name: Fail the build if validation or plan fails
        if: steps.validate.outcome == 'failure' || steps.plan.outcome == 'failure'
        run: exit 1
